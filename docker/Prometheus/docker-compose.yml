version: '3.8'

services:

  prometheus:
    image: ubuntu/prometheus
    container_name: prometheus
    ports:
      - "30090:9090"
    environment:
      - TZ=Europe/Rome
    volumes:
      - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - loki
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "30091:3000"
    volumes:
      - ./grafana-data/data:/var/lib/grafana
    networks:
      - loki

  # otel-collector:
  #   image: otel/opentelemetry-collector-contrib
  #   volumes:
  #     - ./prom/otel-collector-config.yaml:/etc/otel-collector-config.yaml
  #   ports:
  #     - 1888:1888 # pprof extension
  #     - 8888:8888 # Prometheus metrics exposed by the Collector
  #     - 8889:8889 # Prometheus exporter metrics
  #     - 13133:13133 # health_check extension
  #     - 4317:4317 # OTLP gRPC receiver
  #     - 4318:4318 # OTLP http receiver
  #     - 55679:55679 # zpages extension
  #   networks:
  #     - loki

  loki:
    image: grafana/loki:master
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki

  brewup:
      container_name: "brewupsales"
      image: brewupsales
      ports:
          # HTTP
          - '5500:8080'

  brewup-chaos:
      container_name: "brewup-chaos"
      image: brewup-chaos
      ports:
          # HTTP
          - '5600:8080'

networks:
  loki: